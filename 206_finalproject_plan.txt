SI 206 W17
Put your name here:Lauren Sigurdson

----

Which option for the final project are you choosing -- 1, 2, or 3?

IF YOU ARE CHOOSING OPTION 3, answer the following questions:

* Write 1-3 sentences summarizing what the goal of your project is:


* What are your two data sources? Provide links to documentation or websites you will be getting data from.


* Why are you proposing this project?


* What will the output of this project be? What will it look like, and what information will it contain?


* What are your concerns about this proposal?


-----

THE FOLLOWING QUESTIONS ARE FOR EVERYONE. (Though they may be easier if you are choosing Option 1 or 2, because you can reference the Option 1 or 2 instructions.)

* What will at least one of the classes you're going to define be called?

Movie


* What will that class take as input to its constructor?

The constructor should accept a dictionary that represents a movie (movie_dict)


* What will 1 instance of this class represent?

A movie 


* What are 3 instance variables this class will have? What will they be called, and what information will they hold? Why are they important?

1. title of movie
	movie_title 
	will hold the title of the movie
	important when distinguishing between movies
2. director of movie
	movie_director
	will hold the name of the director of the movie
	important for grouping together movies by the same director
3. IMDB rating of movie
	IMDB_rating
	will hold the IMDB rating for the movie
	important when comparing movies with different ratings

* Explain 2 methods the class will have that are not the class constructor (__init__ method) by answering the following questions for each. 
ONE METHOD:
- What will the name of the method be?

__str__() 

- What will the method do?

Takes in a Movie instance and returns a string describing the movie. 

- Will it take any additional input? 

No it only takes in self. 

- Will it return anything? Should it change anything about the instance/an instance variable? 

It returns info from the Movie instance variables in the form of a string but it does not change anything about the instance or the instance variables. 

- Why is it useful for this class definition, in this program?

This will make it easy to see all of the information associated with each Movie. 


ANOTHER METHOD:
- What will the name of the method be?
 
 Actors()

- What will the method do?

Takes in a Movie instance and returns a list of Actors for that movie

- Will it take any additional input? 

No it only takes in self. 

- Will it return anything? Should it change anything about the instance/an instance variable? 

It returns a list of actors that are in that Movie instance

- Why is it useful for this class definition, in this program?

This will make it easy for us to access the list of actors for each movie. 


[If you definitely want to have a third, feel free to answer those questions a third time, because you'll have to do so eventually. when you write documentation!]


* What will the tables in your database be?
A Tweets table
A Users table (for Twitter users)
A Movies table

* What fields will each database table have? Which field of them is the primary key? You should list the fields for each database table here, e.g.
Tweets:
-Tweet text
-Tweet ID (primary key)
-The user who posted the tweet (represented by a reference to the users table)
-The movie search this tweet came from (represented by a reference to the movies table)
-Number favorites
-Number retweets

Users:
-User ID (primary key)
-User screen name
-Number of favorites that user has ever made

Movies:
-ID (primary key) (NOTE title is dangerous for a primary key, 2 movies could have the same title!)
-Title of the movie
-Director of the movie 
-Number of languages the movie has
-IMDB rating of the movie
-The top billed (first in the list) actor in the movie


* List, in English, 2 queries you'll want to make from your database. At least one should be a JOIN. You can always change these later, but start with  ideas you're interested in and lessen the work on yourself later on! 
(e.g. from class examples, maybe "I want to make a query that accesses the numbers of times each user has favorited tweets, and the number of times tweets that user posted have been favorited -- so I'll be joining the Tweets table and the Users table")

I will make a query that accesses the title of the movie, and the text of the tweet that that movie was mentioned in. I will be joining together the Tweets table and the Movies table. 

I will make a query that accesses the number of retweets, and the number of times tweets that user posted have been favorited. I will be joining the Tweets table and the Users table


* What are at least 2 of the data processing mechanics you're planning to use? 

dictionary sorting, list comprehension 


* Why will each of those be useful to you? What data might you use it on? 
(e.g. "Set comprehension: I think I'm going to be looking for unique names and proper nouns in this big set of text, so I'm going to use a set comprehension"). 
>>>This is especially important if you are doing Option 3, but it's important for everyone!<<<

 Dictionary sorting: I think I'm going to be sorting through the Movies to organize them by director, so I'm going to use dictionary sorting.

 List comprehension: I think I'm going to be accumulating a list of movies that were retweeted more than 10 times, so I'm going to use a list comprehension


* What will your output look like? Will it be a .txt file? a CSV file? something else? What information will it contain? >>>This is especially important if you are doing Option 3, but it's important for everyone!<<<

A .txt file because the data will be written to text file as a "summary stats" page. 


